Задача: 
Определить порядок операций в ходе выполнения запроса PostgreSQL


SELECT ------------------------------------------------ 6)
customers.name,
COUNT(order_id) as Total_orders,
SUM(order_amount) as total_spent
FROM customers ---------------------------------------- 1)
JOIN orders ON customers.id = orders.customer_id ------ 2)
WHERE order_date >= '2023-01-01' ---------------------- 3)
GROUP BY customers.name ------------------------------- 4)
HAVING total_spent >= 1000 ---------------------------- 5)
ORDER BY customers.name ------------------------------- 7)
LIMIT 100; -------------------------------------------- 8)

Порядок выполнения этого запроса следующий:

1) Предложение FROM: Первым шагом является определение таблиц, задействованных в запросе. В данном случае это customers и orders.

2) Предложение JOIN: Следующим шагом является выполнение операции объединения на основе условия объединения. В данном случае это customers.id = orders.customer_id, которое связывает две таблицы, сопоставляя id клиентов.

3) Предложение WHERE: Третий шаг — применить условие фильтрации к объединённой таблице. 
В данном случае это order_date >= '2023-01-01', который выбирает только заказы, сделанные 1 января 2023 года и позже. 
Теперь важно написать запрос SARGABLE, чтобы эффективно использовать индексы. 
SARGABLE означает Searched ARGUment ABLE и относится к запросам, которые могут использовать индексы для более быстрого выполнения. 
Мы углубимся в SARGABLE запросы позже.

4) Предложение GROUP BY: Четвёртый шаг — сгруппировать строки по указанным столбцам. 
В данном случае это customers.name, которое создаёт группы на основе имени клиента.

5) Предложение HAVING: Пятый шаг — фильтрация групп по условию. В данном случае это total_spent >= 1000, при котором выбираются группы с общей потраченной суммой 1000 и более.

6) Предложение SELECT: Шестой шаг — выбор столбцов и агрегатных функций из каждой группы. 
В данном случае это customers.name, COUNT(order_id) as Total_orders и SUM(order_amount) as total_spent.

7) Предложение ORDER: Седьмой шаг — сортировка строк по указанным столбцам. 
В данном случае это customers.name, которое сортирует строки в алфавитном порядке по именам клиентов.

*Оконные функции выполняются после операций WHERE, GROUP BY или HAVING, но до ORDER BY.

8) Предложение LIMIT: Последний шаг — пропустить несколько строк из отсортированного набора результатов. В данном случае результат ограничивается максимум 100 строками.
